{
  "benchmark_type": "k8s",
  "categories": [
    {
      "name": "Control Plane Components",
      "sub_category": {
        "name": "Worker Nodes",
        "audit_tests": [
          {
            "name": "4.1.1 Ensure that the kubelet service file permissions are set to 644 or more restrictive",
            "description": "Ensure that the kubelet service file has permissions of 644 or more restrictive.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
            ],
            "remediation": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchmod 755 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "$0 <= 644;",
            "default_value": "By default, the kubelet service file has permissions of 640.",
            "references": [
              "https://kubernetes.io/docs/admin/kubelet/",
              "https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes",
              "https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in"
            ]
          },
          {
            "name": "4.1.2 Ensure that the kubelet service file ownership is set to root:root",
            "description": "Ensure that the kubelet service file ownership is set to root:root.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
            ],
            "remediation": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "'$0' == 'root:root';",
            "default_value": "By default, kubelet service file ownership is set to root:root.",
            "references": [
              "https://kubernetes.io/docs/admin/kubelet/",
              "https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes",
              "https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in"
            ]
          },
          {
            "name": "4.1.3 If proxy kubeconfig file exists ensure permissions are set to 644 or more restrictive",
            "description": "If kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
              "stat -c %a #0"
            ],
            "remediation": "Remediation:\nRun the below command (based on the file location on your system) on the each worker node. For example,\nchmod 644 <proxy kubeconfig file>",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "$1 <= 644;",
            "default_value": "By default, proxy file has permissions of 640.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-proxy/"
            ]
          },
          {
            "name": "4.1.4 If proxy kubeconfig file exists ensure ownership is set to root:root",
            "description": "If kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
              "stat -c %U:%G #0"
            ],
            "remediation": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root <proxy kubeconfig file>",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "'$1' == 'root:root';",
            "default_value": "By default, proxy file ownership is set to root:root.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-proxy/"
            ]
          },
          {
            "name": "4.1.5 Ensure that the --kubeconfig kubelet.conf file permissions are set to 644 or more restrictive",
            "description": "Ensure that the kubelet.conf file has permissions of 644 or more restrictive.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
            ],
            "remediation": "Remediation:\nRun the below command (based on the file location on your system) on the each worker node. For example,\nchmod 644 /etc/kubernetes/kubelet.conf",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "$0 <= 644;",
            "default_value": "By default, kubelet.conf file has permissions of 640.",
            "references": [
              "https://kubernetes.io/docs/admin/kubelet/"
            ]
          },
          {
            "name": "4.1.6 Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root",
            "description": "Ensure that the kubelet.conf file ownership is set to root:root.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
            ],
            "remediation": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root /etc/kubernetes/kubelet.conf",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "'$0' == 'root:root';",
            "default_value": "By default, kubelet.conf file ownership is set to root:root.",
            "references": [
              "https://kubernetes.io/docs/admin/kubelet/"
            ]
          },
          {
            "name": "4.1.7 Ensure that the certificate authorities file permissions are set to 644 or more restrictive",
            "description": "Ensure that the certificate authorities file has permissions of 644 or more restrictive.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "ps -ef | grep kubelet |grep 'client-ca-file' | grep -o 'client-ca-file=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
              "stat -c %a #0"
            ],
            "remediation": "Run the following command to modify the file permissions of the --client-ca-file chmod 644 <filename>",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "$1 <= 644;",
            "default_value": "By default no --client-ca-file is specified.",
            "references": [
              "https://kubernetes.io/docs/admin/authentication/#x509-client-certs"
            ]
          },
          {
            "name": "4.1.8 Ensure that the client certificate authorities file ownership is set to root:root",
            "description": "Ensure that the certificate authorities file ownership is set to root:root.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "ps -ef | grep kubelet |grep 'client-ca-file' | grep -o 'client-ca-file=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
              "sudo stat -c %U:%G #0"
            ],
            "remediation": "Remediation:\nRun the following command to modify the ownership of the --client-ca-file. chown root:root <filename>",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "'$1' <= 'root:root';",
            "default_value": "By default no --client-ca-file is specified.",
            "references": [
              "https://kubernetes.io/docs/admin/authentication/#x509-client-certs"
            ]
          },
          {
            "name": "4.1.9 Ensure that the kubelet --config configuration file has permissions set to 644 or more restrictive ",
            "description": "Ensure that if the kubelet refers to a configuration file with the --config argument, that file has permissions of 644 or more restrictive.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "sudo stat -c %a /var/lib/kubelet/config.yaml"
            ],
            "remediation": "Remediation:\nRun the following command (using the config file location identied in the Audit step)\nchmod 644 /var/lib/kubelet/config.yaml",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "$0 <= 644;",
            "default_value": "By default, the /var/lib/kubelet/config.yaml file as set up by kubeadm has permissions of 644.",
            "references": [
              "https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/"
            ]
          },
          {
            "name": "4.1.10 Ensure that the kubelet --config configuration file ownership is set to root:root",
            "description": "Ensure that if the kubelet refers to a configuration file with the --config argument, that file is owned by root:root.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "sudo stat -c %U:%G /var/lib/kubelet/config.yaml"
            ],
            "remediation": "Run the following command (using the config file location identied in the Audit step)\nchown root:root /etc/kubernetes/kubelet.conf",
            "check_type": "multi_param",
            "impact": "None",
            "eval_expr": "'$1' <= 'root:root';",
            "default_value": "By default, /var/lib/kubelet/config.yaml file as set up by kubeadm is owned by root:root.",
            "references": [
              "https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/"
            ]
          },
          {
            "name": "4.2.1 Ensure that the --anonymous-auth argument is set to false",
            "description": "Disable anonymous requests to the Kubelet server.",
            "profile_applicability": "Level 1 - Worker Node",
            "audit": [
              "ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
              "sudo grep -A5 'authentication' #0 | grep -A1 'anonymous'| grep  -o 'enabled:[^\"]\\S*'| awk -F \":\" '{print $2}' |awk 'FNR <= 1'",
              "ps -ef | grep kubelet |grep ' --anonymous-auth' | grep -o ' --anonymous-auth=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'"
            ],
            "remediation": "Run the following command (using the config file location identied in the Audit step)\nchown root:root /etc/kubernetes/kubelet.conf",
            "check_type": "multi_param",
            "impact": "Anonymous requests will be rejected.",
            "eval_expr": "'$1' == 'false'; || '$2' == 'false';",
            "default_value": "By default, anonymous access is enabled.",
            "references": [
              "https://kubernetes.io/docs/admin/kubelet/",
              "https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication"
            ]
          }
        ]
      }
    }
  ]
}