{
  "benchmark_type": "k8s",
  "categories": [
    {
      "name": "Control Plane Components",
      "sub_category": {
        "name": "API Server",
        "audit_tests": [
          {
            "name": "1.2.1 Ensure that the --anonymous-auth argument is set to false ",
            "description": "Disable anonymous requests to the API server.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'anonymous-auth' | grep -o 'anonymous-auth=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the below parameter.\n--anonymous-auth=false",
            "check_type": "process_param",
            "impact": "Anonymous requests will be rejected.",
            "eval_expr": "'$1' == 'false'",
            "default_value": "By default, anonymous access is enabled.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/authentication/#anonymous-requests"
            ]
          },
          {
            "name": "1.2.2 Ensure that the --basic-auth-file argument is not set ",
            "description": "Do not use basic authentication.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'basic-auth-file' | grep -o 'basic-auth-file=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and remove the --basic-auth-file=<filename> parameter.",
            "check_type": "process_param",
            "impact": "You will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.",
            "eval_expr": "'$1' == ''",
            "default_value": "By default, basic authentication is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/authentication/#static-password-file"
            ]
          },
          {
            "name": "1.2.3 Ensure that the --token-auth-file parameter is not set ",
            "description": "Do not use token based authentication.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'token-auth-file' | grep -o 'token-auth-file=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and remove the --token-auth-file=<filename> parameter.",
            "check_type": "process_param",
            "impact": "You will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.",
            "eval_expr": "'$1' == ''",
            "default_value": "By default, --token-auth-file argument is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/authentication/#static-token-file",
              " https://kubernetes.io/docs/admin/kube-apiserver/"
            ]
          },
          {
            "name": "1.2.4 Ensure that the --kubelet-https argument is set to true ",
            "description": "Use https for kubelet connections.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'anonymous-auth' | grep -o 'anonymous-auth=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and remove the --token-auth-file=<filename> parameter.",
            "check_type": "process_param",
            "impact": "You require TLS to be configured on apiserver as well as kubelets.",
            "eval_expr": "'$1' == '' || '$1' == 'true'",
            "default_value": "By default, kubelet connections are over https.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/kubelet-authentication-authorization/"
            ]
          },
          {
            "name": "1.2.5 Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate ",
            "description": "Enable certificate based kubelet authentication.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'kubelet-client-certificate' | grep -o 'kubelet-client-certificate=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the kubelet client certificate and key parameters as below. --kubelet-client-certificate=<path/to/client-certificate-file> --kubelet-client-key=<path/to/client-key-file>",
            "check_type": "process_param",
            "impact": "You require TLS to be configured on apiserver as well as kubelets.",
            "eval_expr": "'$1' == '/etc/kubernetes/pki/apiserver-kubelet-client.crt'",
            "default_value": "By default, certificate-based kubelet authentication is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/kubelet-authentication-authorization/",
              "https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet"
            ]
          },
          {
            "name": "1.2.5 Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate ",
            "description": "Enable certificate based kubelet authentication.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'kubelet-client-key' | grep -o 'kubelet-client-key=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the kubelet client certificate and key parameters as below. --kubelet-client-certificate=<path/to/client-certificate-file> --kubelet-client-key=<path/to/client-key-file>",
            "check_type": "process_param",
            "impact": "You require TLS to be configured on apiserver as well as kubelets.",
            "eval_expr": "'$1' == '/etc/kubernetes/pki/apiserver-kubelet-client.key'",
            "default_value": "By default, certificate-based kubelet authentication is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/kubelet-authentication-authorization/",
              "https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet"
            ]
          },
          {
            "name": "1.2.6 Ensure that the --kubelet-certificate-authority argument is set as appropriate ",
            "description": "Verify kubelet's certificate before establishing connection.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'kubelet-certificate-authority' | grep -o 'kubelet-certificate-authority=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the -- kubelet-certificate-authority parameter to the path to the cert file for the certificate authority. --kubelet-certificate-authority=<ca-string>",
            "check_type": "process_param",
            "impact": "You require TLS to be configured on apiserver as well as kubelets.",
            "eval_expr": "'$1' == '/etc/kubernetes/pki/ca.crt'",
            "default_value": "By default, --kubelet-certificate-authority argument is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/kubelet-authentication-authorization/",
              "https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet"
            ]
          },
          {
            "name": "1.2.7 Ensure that the --authorization-mode argument is not set to AlwaysAllow ",
            "description": "Do not always authorize all requests.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'authorization-mode' | grep -o 'authorization-mode=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the --authorization-mode parameter to values other than AlwaysAllow. One such example could be as below.\n--authorization-mode=RBAC",
            "check_type": "process_param",
            "impact": "Only authorized requests will be served.",
            "eval_expr": "'$1' != '' && '$1' != 'AlwaysAllow'",
            "default_value": "By default, AlwaysAllow is not enabled.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/ ",
              "https://kubernetes.io/docs/admin/authorization/"
            ]
          },
          {
            "name": "1.2.8 Ensure that the --authorization-mode argument includes Node ",
            "description": "Restrict kubelet nodes to reading only objects associated with them.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'authorization-mode' | grep -o 'authorization-mode=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the --authorization-mode parameter to a value that includes Node. --authorization-mode=Node,RBAC",
            "check_type": "multi_process_param",
            "impact": "None",
            "eval_expr": "'Node' IN ($1)",
            "default_value": "By default, Node authorization is not enabled.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/authorization/node/",
              "https://github.com/kubernetes/kubernetes/pull/46076"
            ]
          },
          {
            "name": "1.2.9 Ensure that the --authorization-mode argument includes RBAC ",
            "description": "Turn on Role Based Access Control.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'authorization-mode' | grep -o 'authorization-mode=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the --authorization-mode parameter to a value that includes RBAC, for example:--authorization-mode=Node,RBAC",
            "check_type": "multi_process_param",
            "impact": "When RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.",
            "eval_expr": "'RBAC' IN ($1)",
            "default_value": "By default, RBAC authorization is not enabled.",
            "references": [
              "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
            ]
          },
          {
            "name": "1.2.10 Ensure that the admission control plugin EventRateLimit is set",
            "description": "Limit the rate at which the API server accepts requests.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'enable-admission-plugins' | grep -o 'enable-admission-plugins=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the Kubernetes documentation and set the desired limits in a configuration file. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml and set the below parameters\n --enable-admission-plugins=...,EventRateLimit,... --admission-control-config-file=<path/to/configuration/file>",
            "check_type": "multi_process_param",
            "impact": "You need to carefully tune in limits as per your environment.",
            "eval_expr": "'EventRateLimit' IN ($1)",
            "default_value": "By default, EventRateLimit is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/admission-controllers/#eventratelimit",
              "https://github.com/staebler/community/blob/9873b632f4d99b5d99c38c9b15fe2f8b93d0a746/contributors/design- proposals/admission_control_event_rate_limit.md"
            ]
          },
          {
            "name": "1.2.11 Ensure that the admission control plugin AlwaysAdmit is not set",
            "description": "Do not allow all requests.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'enable-admission-plugins' | grep -o 'enable-admission-plugins=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.",
            "check_type": "multi_process_param",
            "impact": "Only requests explicitly allowed by the admissions control plugins would be served.",
            "eval_expr": "'$1' != '' && !('AlwaysAdmit' IN ($1))",
            "default_value": "AlwaysAdmit is not in the list of default admission plugins.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit"
            ]
          },
          {
            "name": "1.2.12 Ensure that the admission control plugin AlwaysPullImages is set",
            "description": "Always pull images.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'enable-admission-plugins' | grep -o 'enable-admission-plugins=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the --enable-admission-plugins parameter to include AlwaysPullImages.--enable-admission-plugins=...,AlwaysPullImages,...",
            "check_type": "multi_process_param",
            "impact": "Credentials would be required to pull the private images every time. Also, in trusted environments, this might increases load on network, registry, and decreases speed.This setting could impact offline or isolated clusters, which have images pre-loaded and do not have access to a registry to pull in-use images. This setting is not appropriate for clusters which use this configuration.",
            "eval_expr": "'$1' != '' && 'AlwaysPullImages' IN ($1)",
            "default_value": "By default, AlwaysPullImages is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/admission-controllers/#alwayspullimages"
            ]
          },
          {
            "name": "1.2.13 Ensure that the admission control plugin SecurityContextDeny is set if PodSecurityPolicy is not used",
            "description": "The SecurityContextDeny admission controller can be used to deny pods which make use of some SecurityContext fields which could allow for privilege escalation in the cluster. This should be used where PodSecurityPolicy is not in place within the cluster.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'enable-admission-plugins' | grep -o 'enable-admission-plugins=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and set the --enable-admission-plugins parameter to include SecurityContextDeny, unless PodSecurityPolicy is already in place.\n--enable-admission-plugins=...,SecurityContextDeny,...",
            "check_type": "multi_process_param",
            "impact": "This admission controller should only be used where Pod Security Policies cannot be used on the cluster, as it can interact poorly with certain Pod Security Policies",
            "eval_expr": "'SecurityContextDeny' IN ($1) && !('PodSecurityPolicy' IN ($1))",
            "default_value": "By default, SecurityContextDeny is not set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/admission-controllers/#securitycontextdeny",
              "https://kubernetes.io/docs/user-guide/pod-security-policy/#working-with-rbac"
            ]
          },
          {
            "name": "1.2.14 Ensure that the admission control plugin ServiceAccount is set",
            "description": "Automate service accounts management.",
            "profile_applicability": "Level 1 - Master Node",
            "audit": "ps -ef | grep kube-apiserver |grep 'disable-admission-plugins' | grep -o 'disable-admission-plugins=[^\"]\\S*' | awk -F \"=\" '{print $2}' |awk 'FNR <= 1'",
            "remediation": "Follow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube- apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.",
            "check_type": "multi_process_param",
            "impact": "None",
            "eval_expr": "'$1' != '' && !('ServiceAccount' IN ($1))",
            "default_value": "By default, ServiceAccount is set.",
            "references": [
              "https://kubernetes.io/docs/admin/kube-apiserver/",
              "https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount",
              "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service- account/"
            ]
          }
        ]
      }
    }
  ]
}