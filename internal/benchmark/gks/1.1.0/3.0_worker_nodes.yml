---
benchmark_type: k8s
categories:
-
  name: Control Plane Components
  sub_category:
    name: 3.0 Worker Nodes
    audit_tests:
    - name: 3.1.1 Ensure that the proxy kubeconfig file permissions are set to 644 or
        more restrictive (Scored)
      description: |-
        If kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy
        kubeconfig file has permissions of 644 or more restrictive.
      profile_applicability: Master
      audit:
        - ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
        - stat -c %a #0
      remediation: Run the below command (based on the file location on your system) on the each worker
        node. For example,
        chmod 644 <proxy kubeconfig file>
      check_type: multi_param
      impact: None
      eval_expr: "$1 <= 644;"
      default_value: See the GKE documentation for the default value.
      applicable: true
      references:
      - https://kubernetes.io/docs/admin/kube-proxy/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.2 Ensure that the proxy kubeconfig file ownership is set to root:root
      description: |-
        If kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to
        root:root.
      profile_applicability: Master
      audit:
      - ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - stat -c %U:%G #0
      remediation: Run the below command (based on the file location on your system) on the each worker
        node. For example,
        chown root:root <proxy kubeconfig file>
      check_type: multi_param
      impact: None
      eval_expr: "'$1' == 'root:root';"
      default_value: See the GKE documentation for the default value.
      applicable: true
      references:
      - hthttps://kubernetes.io/docs/admin/kube-proxy/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.3 Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)
      description: |-
        Ensure that if the kubelet refers to a configuration file with the --config argument, that file
        has permissions of 644 or more restrictive.
      profile_applicability: Master
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - stat -c %a #0
      remediation: Run the following command (using the config file location identied in the Audit step)
        chmod 644 /var/lib/kubelet/config.yaml
      check_type: multi_param
      impact: None
      eval_expr: "$1 <= 644;"
      default_value: See the GKE documentation for the default value.
      applicable: true
      references:
      - https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.4 Ensure that the kubelet configuration file ownership is set to
        root:root (Scored)
      description: |-
        Ensure that if the kubelet refers to a configuration file with the --config argument, that file
        is owned by root:root.
      profile_applicability: Master
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - stat -c %U:%G #0
      remediation: Run the following command (using the config file location identied in the Audit step)
        chown root:root /etc/kubernetes/kubelet.conf
      check_type: multi_param
      impact: None
      eval_expr: "'$1' == 'root:root';"
      default_value: See the GKE documentation for the default value.
      applicable: true
      references:
      - https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.2.1 Ensure that the --anonymous-auth argument is set to false (Scored)
      description: |-
        Disable anonymous requests to the Kubelet server.
      profile_applicability: Master
      audit:
        - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
        - 'grep -A5 ''authentication'' #0 | grep -A1 ''anonymous''| grep  -o ''enabled:[^"]\S*''| awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
        - ps -ef | grep kubelet |grep ' --anonymous-auth' | grep -o ' --anonymous-auth=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: If using a Kubelet config file, edit the file to set authentication anonymous enabled to false.\n If using executable arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
      check_type: multi_param
      impact: Anonymous requests will be rejected.
      eval_expr: "'$1' == 'false'; || '$2' == 'false';"
      default_value: See the GKE documentation for the default value.
      applicable: true
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubeletauthentication
    - name: 3.2.2 Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
      description: Do not allow all requests. Enable explicit authorization.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep -A5 ''authorization'' #0 | grep  ''mode:[^"]\S*''| awk -F ":" ''{print
            $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --authorization-mode' | grep -o ' --authorization-mode=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set authorization: mode to Webhook.
        If using executable arguments, edit the kubelet service file
        /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and
        set the below parameter in KUBELET_AUTHZ_ARGS variable.
        --authorization-mode=Webhook
      check_type: multi_param
      impact: Unauthorized requests will be denied.
      eval_expr: "'$1' != 'AlwaysAllow'; && '$2' != 'AlwaysAllow';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubeletauthentication